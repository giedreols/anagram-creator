@model WordListViewModel


@{
    ViewData["Title"] = "Žodžių sąrašas";
}

<div class="text-left">

    <p>
        @ViewData["Message"]
    </p>

    <form asp-action="Search" method="get">
        <div class="form-actions no-color">
            <p>
                <input type="text" name="inputWord" placeholder="Žodis ar jo dalis" value="@ViewData["Word"]" />
                <input type="submit" value="Ieškoti" class="btn btn-default" />
            </p>
        </div>
    </form>

    @if (Model.CurrentPageWords.Count == 0)
    {
        <p>Deja, žodžių neradome.</p>
    }

    <ul>
        @foreach (var word in @Model.CurrentPageWords)
        {
            <li>
                <a href="@Url.Action("Get", "Word", new { inputWord = @word.Value })">@(word.Value)</a>
            </li>
        }
    </ul>

    <script>
        function toggleFormVisibility(wordKey) {
            var formDiv = document.getElementById("editForm_" + wordKey);
            formDiv.style.display = formDiv.style.display === "none" ? "block" : "none";
        }
    </script>

    <div>
        @if (Model.TotalPages > 1)
        {
            @for (var page = 1; page <= Model.TotalPages; page++)
            {
                <a href="?page=@(page)&inputWord=@ViewData["Word"]" class="@(Model.CurrentPage == page ? "active" : "")">@(page)</a>
            }
        }
    </div>

</div>